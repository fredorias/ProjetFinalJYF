@using DAL_JYF
@model Match

@{
    ViewBag.Title = "Edit";
    var ListeArbitresDispo = ViewBag.ListeArbitresDispo;
}

<h2>Détail Match</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MatchId)

        <fieldset>
            <legend>Match</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Locaux, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Locaux, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Locaux, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Visiteurs, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Visiteurs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Visiteurs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NiveauMatch, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NiveauMatch, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NiveauMatch, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CalendrierMatch.DateJournee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CalendrierMatch.DateJournee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CalendrierMatch.DateJournee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HeureMatch, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HeureMatch, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeureMatch, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Arbitre</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.ArbitreMatch.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ArbitreMatch.Nom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ArbitreMatch.Nom, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.ArbitreMatch.Prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ArbitreMatch.Prenom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ArbitreMatch.Prenom, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.ArbitreMatch.NiveauArbitre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ArbitreMatch.NiveauArbitre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ArbitreMatch.NiveauArbitre, "", new { @class = "text-danger" })
                </div>
                <div>
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        foreach (Arbitre a in ListeArbitresDispo)
                        {

                            listItems.Add(new SelectListItem
                            {
                                Text = a.Nom + " " + a.Prenom + " (" + a.NiveauArbitre + ")",
                                Value = a.ArbitreId.ToString()
                            });

                        }
                    }

                    @Html.DropDownListFor(model => model.ArbitreMatch, listItems, "-- Sélectionner un arbitre --")
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>Adresse</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.AdresseMatch.NomAdresse, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AdresseMatch.NomAdresse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdresseMatch.NomAdresse, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.AdresseMatch.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AdresseMatch.Numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdresseMatch.Numero, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.AdresseMatch.Rue, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AdresseMatch.Rue, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdresseMatch.Rue, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.AdresseMatch.CodePostal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AdresseMatch.CodePostal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdresseMatch.CodePostal, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.AdresseMatch.Ville, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AdresseMatch.Ville, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdresseMatch.Ville, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                        }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}